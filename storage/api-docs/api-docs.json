{
    "openapi": "3.0.0",
    "info": {
        "title": "Futtertrog API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://futtertrog.test"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "The email field is required.",
                                                            "The email must be a valid email address."
                                                        ]
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "description": "Logout user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/meals": {
            "get": {
                "tags": [
                    "meals"
                ],
                "summary": "Meals for given date",
                "description": "Schows the meals for the current on given date",
                "operationId": "meals.index",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "default": "today"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Model": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "first_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "next_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Meal": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Model"
                    },
                    {
                        "properties": {
                            "title": {
                                "type": "string",
                                "readOnly": "true"
                            },
                            "description": {
                                "type": "string",
                                "readOnly": "true"
                            },
                            "price": {
                                "type": "number",
                                "format": "currency",
                                "readOnly": "true"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "john@example.com"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "John"
                    },
                    "api_token": {
                        "type": "string",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "Default": {
                "description": "System error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Empty": {
                "description": "Empty response",
                "content": {
                    "application/json": {
                        "schema": {}
                    }
                }
            }
        },
        "parameters": {
            "page_in_query": {
                "name": "page",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "minimum": "1"
                }
            },
            "per_page_in_query": {
                "name": "per_page",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "minimum": "1"
                }
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer",
                "description": "A simple apiKey authentication",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}